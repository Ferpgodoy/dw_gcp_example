name: Deploy PRD DW GCP Example

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    environment: PRD

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
      REGION: ${{ secrets.REGION }}
      TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements-ci.txt

      - name: Configure GCP credentials
        run: |
          mkdir -p config/secrets
          echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > config/secrets/gcp_credentials.json

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_JSON }}'

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Ensure backend bucket exists
        run: |
          if ! gsutil ls -b gs://${{ env.TF_BACKEND_BUCKET }} > /dev/null 2>&1; then
            echo "Bucket doesn't exist. Creating..."
            gsutil mb -p ${{ env.GCP_PROJECT_ID }} -l ${{ env.REGION }} gs://${{ env.TF_BACKEND_BUCKET }}
          else
            echo "Bucket already exists."
          fi

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > infra/terraform.tfvars
          project_id  = "${{ env.GCP_PROJECT_ID }}"
          gcp_key = "../config/secrets/gcp_credentials.json"
          bucket = "${{ env.GCP_BUCKET_NAME }}"
          region = "${{ env.REGION }}"
          EOF

      - name: Create backend.tf
        run: |
          cat <<EOF > infra/backend.tf
          terraform {
            backend "gcs" {
              bucket  = "${{ env.TF_BACKEND_BUCKET }}"
              prefix  = "infra"
            }
          }
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Run Terraform
        working-directory: infra
        run: |
          terraform init
          terraform plan -var-file=terraform.tfvars
          terraform apply -auto-approve -var-file=terraform.tfvars

      - name: Run migrations
        run: |
          python python_scripts/execute_migrations.py

