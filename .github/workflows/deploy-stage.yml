name: Deploy STAGE DW GCP Example

on:
  push:
    branches:
      - stage  # Ou qualquer branch que você use para o ambiente de stage

jobs:
  deploy:
    name: Deploy to GCP and Astronomer (Stage)
    runs-on: ubuntu-latest
    environment: STAGE

    env:
      GCP_PROJECT_ID: ${{ secrets.STAGE_GCP_PROJECT_ID }}
      GCP_BUCKET_NAME: ${{ secrets.STAGE_GCP_BUCKET_NAME }}
      REGION: ${{ secrets.STAGE_REGION }}
      #ASTRO_API_TOKEN: ${{ secrets.STAGE_ASTRO_API_TOKEN }}
      #ASTRO_DEPLOYMENT_ID: ${{ secrets.STAGE_ASTRO_DEPLOYMENT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements-ci.txt

      - name: Configure GCP credentials
        run: |
          mkdir -p config/secrets
          echo '${{ secrets.STAGE_GCP_CREDENTIALS_JSON }}' > config/secrets/gcp_credentials.json

      - name: Create .env file
        run: |
          cat <<EOF > .env
          GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
          GOOGLE_APPLICATION_CREDENTIALS=config/secrets/gcp_credentials.json
          GCP_BUCKET_NAME=${{ env.GCP_BUCKET_NAME }}
          ASTRO_API_TOKEN=${{ env.ASTRO_API_TOKEN }}
          ASTRO_DEPLOYMENT_ID=${{ env.ASTRO_DEPLOYMENT_ID }}
          EOF

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > infra/terraform.tfvars
          project_id  = "${{ env.GCP_PROJECT_ID }}"
          gcp_key = "../config/secrets/gcp_credentials.json"
          bucket = "${{ env.GCP_BUCKET_NAME }}"
          region = "${{ env.REGION }}"
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
        terraform_version: 1.6.6  # ou qualquer versão que você esteja usando

      - name: Run Terraform
        working-directory: infra
        run: |
          terraform init
          terraform workspace new ${{ env.GCP_PROJECT_ID }} || terraform workspace select ${{ env.GCP_PROJECT_ID }}
          terraform plan -var-file=terraform.tfvars
          terraform apply -auto-approve -var-file=terraform.tfvars

      - name: Run migrations
        run: |
          python python_scripts/execute_migrations.py

      - name: Install Astro CLI
        run: curl -sSL https://install.astronomer.io | sudo bash

      #- name: Deploy to Astronomer
      #  run: |
      #    astro login --token ${{ env.ASTRO_API_TOKEN }}
      #    astro deploy --deployment-id ${{ env.ASTRO_DEPLOYMENT_ID }}
